apiVersion: v1
kind: Secret
metadata:
  name: orderdesk-secrets
  labels:
    app: orderdesk-mcp
type: Opaque
stringData:
  # ⚠️ IMPORTANT: Replace all values with your actual secrets!
  # Generate with:
  #   openssl rand -base64 32
  #   python3 -c "import secrets; print(secrets.token_urlsafe(48))"
  
  # Master encryption key (base64, 32+ bytes)
  mcp_kms_key: "CHANGE_ME_openssl_rand_base64_32"
  
  # Admin master key for WebUI login
  admin_master_key: "CHANGE_ME_python_secrets_token_urlsafe_48"
  
  # JWT signing key (base64, 48+ bytes)
  jwt_secret_key: "CHANGE_ME_openssl_rand_base64_48"
  
  # CSRF protection key (base64, 32+ bytes)
  csrf_secret_key: "CHANGE_ME_openssl_rand_base64_32"

---
# To create from actual secrets:
#
# 1. Generate secrets:
#    MCP_KMS_KEY=$(openssl rand -base64 32)
#    ADMIN_KEY=$(python3 -c "import secrets; print(secrets.token_urlsafe(48))")
#    JWT_KEY=$(openssl rand -base64 48)
#    CSRF_KEY=$(openssl rand -base64 32)
#
# 2. Create secret in Kubernetes:
#    kubectl create secret generic orderdesk-secrets \
#      --from-literal=mcp_kms_key="$MCP_KMS_KEY" \
#      --from-literal=admin_master_key="$ADMIN_KEY" \
#      --from-literal=jwt_secret_key="$JWT_KEY" \
#      --from-literal=csrf_secret_key="$CSRF_KEY"
#
# 3. Or use sealed-secrets / external-secrets for GitOps:
#    https://github.com/bitnami-labs/sealed-secrets
#    https://external-secrets.io/

