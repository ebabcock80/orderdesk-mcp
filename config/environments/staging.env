# OrderDesk MCP Server - Staging Environment
# =============================================================================
# Optimized for pre-production testing and QA
# Mirrors production but with testing features enabled
# Copy to project root as .env: cp config/environments/staging.env .env
# =============================================================================

# REQUIRED: Encryption & Security
# -----------------------------------------------------------------------------
# ⚠️ Generate unique keys for staging (don't reuse dev keys!)
MCP_KMS_KEY=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32
ADMIN_MASTER_KEY=CHANGE_ME_GENERATE_WITH_python_secrets_token_urlsafe_48

# Core Server
# -----------------------------------------------------------------------------
PORT=8080
PUBLIC_URL=https://staging.yourdomain.com
DATABASE_URL=sqlite:///data/app.db
LOG_LEVEL=INFO
TRUST_PROXY=true
AUTO_PROVISION_TENANT=false

# WebUI
# -----------------------------------------------------------------------------
ENABLE_WEBUI=true
JWT_SECRET_KEY=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_48
SESSION_TIMEOUT=43200
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=Strict
CSRF_SECRET_KEY=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# Rate Limiting (Production-like)
# -----------------------------------------------------------------------------
RATE_LIMIT_RPM=120
WEBUI_RATE_LIMIT_LOGIN=5
WEBUI_RATE_LIMIT_SIGNUP=2
WEBUI_RATE_LIMIT_API_CONSOLE=30
SIGNUP_RATE_LIMIT_PER_HOUR=3

# Public Signup (Enable for Testing)
# -----------------------------------------------------------------------------
ENABLE_PUBLIC_SIGNUP=true
REQUIRE_EMAIL_VERIFICATION=true
SIGNUP_VERIFICATION_EXPIRY=900

# Email (Real SMTP for Testing)
# -----------------------------------------------------------------------------
EMAIL_PROVIDER=smtp
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=staging@yourdomain.com
SMTP_PASSWORD=CHANGE_ME_YOUR_APP_SPECIFIC_PASSWORD
SMTP_USE_TLS=true
SMTP_FROM_EMAIL=noreply-staging@yourdomain.com

# Caching (SQLite or Redis)
# -----------------------------------------------------------------------------
CACHE_BACKEND=sqlite
REDIS_URL=redis://redis:6379/0
CACHE_TTL_ORDERS=15
CACHE_TTL_PRODUCTS=60
CACHE_TTL_CUSTOMERS=60
CACHE_TTL_STORE_SETTINGS=300

# HTTP Client
# -----------------------------------------------------------------------------
HTTP_TIMEOUT=30
HTTP_MAX_RETRIES=3
MUTATION_MAX_RETRIES=5

# Monitoring
# -----------------------------------------------------------------------------
ENABLE_METRICS=true
ENABLE_DETAILED_HEALTH=true
ENABLE_AUDIT_LOG=true
AUDIT_LOG_RETENTION_DAYS=60
ENABLE_TRACE_VIEWER=true

# Testing
# -----------------------------------------------------------------------------
ORDERDESK_TEST_ENABLED=true
ORDERDESK_TEST_STORE_ID=your-test-store-id
ORDERDESK_TEST_API_KEY=your-test-api-key

# =============================================================================
# Staging Environment Purpose
# =============================================================================
#
# Use staging to:
# - Test new features before production
# - Validate deployment procedures
# - Run load and performance tests
# - Test email flows with real SMTP
# - Validate SSL/TLS configuration
# - Test backup and recovery
# - QA testing with production-like data
# - Security testing and penetration tests
#
# Key Differences from Production:
# - Detailed health check enabled (for debugging)
# - Trace viewer enabled (for troubleshooting)
# - Integration tests enabled
# - Longer audit retention for analysis
# - May use test/sandbox OrderDesk accounts
#
# Key Differences from Development:
# - HTTPS required
# - Real SMTP for emails
# - No auto-provisioning
# - Production-like rate limits
# - Trust proxy headers
# - Unique encryption keys
#
