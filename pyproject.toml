[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "orderdesk-mcp-server"
version = "0.1.0-alpha"
description = "Native MCP server for OrderDesk API with multi-tenant security and optional web interface"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Eric Babcock", email = "eric.babcock@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.11"
dependencies = [
    # MCP Protocol
    "mcp>=1.0.0",
    # HTTP Client & Server
    "httpx>=0.27.0",
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    # Data & Validation
    "pydantic>=2.8.0",
    "pydantic-settings>=2.3.0",
    "sqlalchemy>=2.0.30",
    # Security & Crypto
    "cryptography>=42.0.0",
    "argon2-cffi>=23.1.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    # Caching
    "redis>=5.0.0",
    # Logging & Monitoring
    "structlog>=24.2.0",
    "prometheus-client>=0.20.0",
]

[project.optional-dependencies]
webui = [
    # WebUI framework (HTMX + Tailwind per Q6)
    "jinja2>=3.1.4",
    "python-multipart>=0.0.9",
    # Email providers
    "aiosmtplib>=3.0.0",
    # Optional: SendGrid, Postmark adapters
]
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",
    "ruff>=0.4.0",
    "mypy>=1.10.0",
    "black>=24.4.0",
    "types-redis>=4.6.0",
]
e2e = [
    # Playwright for WebUI E2E tests (per Q30)
    "playwright>=1.44.0",
]

[project.urls]
Homepage = "https://github.com/ebabcock80/orderdesk-mcp"
Repository = "https://github.com/ebabcock80/orderdesk-mcp"
Issues = "https://github.com/ebabcock80/orderdesk-mcp/issues"

[tool.hatch.build.targets.wheel]
packages = ["mcp_server"]

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cryptography.*",
    "redis.*",
    "structlog.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
