# ============================================================================
# Production Environment Configuration
# ============================================================================
# 
# Purpose: Live production deployment
# Use: Real user traffic, production data
# Security: Maximum security, no compromises
#
# Setup: cp .env.production.example .env.production
# IMPORTANT: Change ALL secrets before deploying!
#
# ============================================================================

# ============================================================================
# Core Configuration - CHANGE ALL SECRETS
# ============================================================================
MCP_KMS_KEY=CHANGE-ME-production-kms-key-use-secure-random-64-chars-minimum

# Database - Use PostgreSQL for production
DATABASE_URL=postgresql://orderdesk:CHANGE-ME-db-password@postgres:5432/orderdesk_production

# Server
PORT=8000
TRUST_PROXY=true
LOG_LEVEL=INFO

# ============================================================================
# Caching - Use Redis for production
# ============================================================================
CACHE_BACKEND=redis
REDIS_URL=redis://:CHANGE-ME-redis-password@redis:6379/0

# Cache TTLs (seconds)
CACHE_TTL_ORDERS=15
CACHE_TTL_PRODUCTS=60
CACHE_TTL_CUSTOMERS=300
CACHE_TTL_STORE_SETTINGS=3600

# ============================================================================
# HTTP Client & Resilience
# ============================================================================
HTTP_TIMEOUT_CONNECT=15.0
HTTP_TIMEOUT_READ=60.0
HTTP_TIMEOUT_WRITE=60.0
HTTP_TIMEOUT_POOL=5.0
HTTP_MAX_RETRIES=3
MUTATION_MAX_RETRIES=5

# ============================================================================
# Security & Authentication - PRODUCTION SETTINGS
# ============================================================================
# Master key auth - DISABLE auto-provisioning
ENABLE_AUTO_PROVISION=false

# CORS - Restrict to your domains only
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ============================================================================
# WebUI (Optional - Enable if needed)
# ============================================================================
ENABLE_WEBUI=true
ENABLE_PUBLIC_SIGNUP=false

# JWT - CHANGE SECRET
JWT_SECRET_KEY=CHANGE-ME-production-jwt-secret-use-64-char-secure-random-string
SESSION_TIMEOUT=3600
MAGIC_LINK_EXPIRY=900

# Session Cookies - Production security
SESSION_COOKIE_NAME=orderdesk_mcp_session
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=strict

# Email - Use production email provider
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASSWORD=CHANGE-ME-sendgrid-api-key
SMTP_FROM=noreply@yourdomain.com
SMTP_TLS=true
REQUIRE_EMAIL_VERIFICATION=true

# CSRF - CHANGE SECRET
CSRF_SECRET_KEY=CHANGE-ME-production-csrf-secret-64-char-random-string

# Rate Limiting - Strict production limits
WEBUI_RATE_LIMIT_LOGIN=5/minute
WEBUI_RATE_LIMIT_SIGNUP=3/hour
WEBUI_RATE_LIMIT_API_CONSOLE=100/minute

# ============================================================================
# Testing - DISABLED IN PRODUCTION
# ============================================================================
ORDERDESK_TEST_ENABLED=false

# ============================================================================
# Observability - Production monitoring
# ============================================================================
ENABLE_METRICS=true
ENABLE_DETAILED_HEALTH=false
ENABLE_TRACE_VIEWER=false
ENABLE_AUDIT_LOG=true
AUDIT_LOG_RETENTION_DAYS=90

# ============================================================================
# Production Security Checklist
# ============================================================================
# 
# [ ] Changed ALL secrets (KMS_KEY, JWT_SECRET_KEY, CSRF_SECRET_KEY, DB password, Redis password)
# [ ] Set ENABLE_AUTO_PROVISION=false
# [ ] Configured CORS with your actual domains only
# [ ] Using PostgreSQL database (not SQLite)
# [ ] Using Redis cache backend
# [ ] Enabled HTTPS/TLS everywhere (SESSION_COOKIE_SECURE=true)
# [ ] Configured production email provider
# [ ] Set strict rate limits
# [ ] Disabled ENABLE_DETAILED_HEALTH (can expose internal details)
# [ ] Disabled ENABLE_TRACE_VIEWER (performance overhead)
# [ ] Set LOG_LEVEL=INFO (not DEBUG)
# [ ] Configured database backups
# [ ] Set up monitoring alerts
# [ ] Tested disaster recovery
# [ ] Documented runbook procedures
#
# ============================================================================
# Deployment Recommendations
# ============================================================================
# 
# Secrets Management:
# - Use environment variables (never commit secrets)
# - Use secret management (AWS Secrets Manager, HashiCorp Vault, etc)
# - Rotate secrets regularly
# - Use different secrets per environment
#
# Database:
# - PostgreSQL with connection pooling
# - Regular automated backups
# - Point-in-time recovery enabled
# - Monitoring query performance
#
# Caching:
# - Redis with persistence enabled
# - Redis password authentication
# - Monitor cache hit rates
# - Redis sentinel for HA (optional)
#
# Networking:
# - HTTPS only (enforce with HSTS)
# - Behind reverse proxy (nginx/Traefik)
# - DDoS protection (Cloudflare, etc)
# - Firewall rules (restrict database/redis access)
#
# Monitoring:
# - Prometheus metrics collection
# - Grafana dashboards
# - Alert rules configured
# - Log aggregation (ELK, Datadog, etc)
# - Uptime monitoring (UptimeRobot, etc)
#
# High Availability:
# - Multiple application instances
# - Load balancer (nginx, HAProxy, ALB)
# - Database replication (optional)
# - Redis sentinel (optional)
# - Zero-downtime deployments
#
# ============================================================================
