services:
  # OrderDesk MCP Server (stdio primary, HTTP optional)
  mcp:
    build: .
    container_name: orderdesk-mcp-server
    env_file: .env
    volumes:
      - mcp_data:/app/data
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - PORT=${PORT:-8080}
      - DATABASE_URL=sqlite:////app/data/app.db
      - CACHE_BACKEND=${CACHE_BACKEND:-memory}
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || python -c 'import sys; sys.exit(0)'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy
        required: false
    networks:
      - mcp-network

  # Redis (optional - for distributed caching and WebUI sessions)
  # Enable with: docker-compose --profile redis up
  redis:
    image: redis:7-alpine
    container_name: orderdesk-redis
    profiles: ["redis"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - mcp-network

volumes:
  mcp_data:
    driver: local
  redis_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
